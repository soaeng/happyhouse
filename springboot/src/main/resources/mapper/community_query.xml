<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.ssafy.happyhouse.dao.CommunityDao">


	<!-- # 게시글 등록했을 때의 처리 -->
	<!-- 게시글 등록 -->
	<insert id="communityInsert" parameterType="com.ssafy.happyhouse.dto.CommunityDto" useGeneratedKeys="true" keyProperty="boardId">
		INSERT INTO community ( USER_SEQ, TITLE, CONTENT, REG_DT, READ_COUNT )
		            VALUES ( #{userSeq}, #{title}, #{content}, now(), 0 )
	</insert>
	
	<!-- 게시글 파일 등록 -->
	<insert id="communityFileInsert" parameterType="com.ssafy.happyhouse.dto.CommunityFileDto">
		INSERT INTO community_FILE ( BOARD_ID, FILE_NAME, FILE_SIZE, FILE_CONTENT_TYPE, FILE_URL )
		            VALUES ( #{boardId}, #{fileName}, #{fileSize}, #{fileContentType}, #{fileUrl} )
	</insert>
	
	
	
	<!-- # 게시글 조회 시의 처리 -->
	<!-- 게시글 상세조회  -->
	<select id="communityDetail" parameterType="int" resultType="com.ssafy.happyhouse.dto.CommunityDto">
		SELECT b.BOARD_ID, b.USER_SEQ, u.USER_NAME, u.USER_PROFILE_IMAGE_URL,
			   b.TITLE, b.CONTENT, b.REG_DT, b.READ_COUNT
		  FROM community b, USERS u
		 WHERE b.BOARD_ID = #{boardId}
		   AND b.USER_SEQ = u.USER_SEQ
	</select>
	
	<!-- 해당 게시글 파일 목록 -->
	<select id="communityDetailFileList" parameterType="int" resultType="com.ssafy.happyhouse.dto.CommunityFileDto">
		SELECT BOARD_ID, FILE_ID, FILE_NAME, FILE_SIZE, FILE_CONTENT_TYPE, FILE_URL, REG_DT
		  FROM community_FILE
		 WHERE BOARD_ID = #{boardId}
	</select>
	
	<!-- 해당 게시글 조회수 -->
	<select id="communityUserReadCount" parameterType="map" resultType="int">
		SELECT count(*) FROM community_user_read WHERE board_id = #{boardId} and user_seq = #{userSeq}
	</select>
	
	<!-- 해당 게시글 읽음 처리 -->
	<insert id="communityUserReadInsert" parameterType="map">
		INSERT INTO community_user_read ( board_id, user_seq )
		            VALUES ( #{boardId}, #{userSeq} )
	</insert>
	
	<!-- 게시글 조회수 수정 -->
	<update id="communityReadCountUpdate" parameterType="int">
		UPDATE community set READ_COUNT = READ_COUNT + 1
		 WHERE BOARD_ID = #{boardId}
	</update>
	
	
	
	
	<!-- # 게시글 삭제 시의 처리 -->
	<!-- 게시글 삭제 -->
	<delete id="communityDelete" parameterType="int">
		DELETE FROM community WHERE BOARD_ID = #{boardId}
	</delete>
	
	<!-- 해당 게시글 파일 삭제 -->
	<delete id="communityFileDelete" parameterType="int">
		DELETE FROM community_FILE WHERE BOARD_ID = #{boardId}
	</delete>
	
	<!-- 해당 게시글 업로드된 파일 전체 삭제를 위해 url 가져오기 -->
	<select id="communityFileUrlDeleteList" parameterType="int" resultType="string">
		SELECT FILE_URL FROM community_FILE WHERE BOARD_ID = #{communityId}
	</select>
	
	<!-- 게시글 조회수 삭제 -->
	<delete id="communityReadCountDelete" parameterType="int">
		DELETE FROM community_user_read WHERE BOARD_ID = #{boardId}
	</delete>
	
	
	
	
	<!-- # 게시글 수정 시의 처리 -->
	<!-- 게시글 수정 (파일 수정하게 되면 파일 전체 delete 후 수정된 내용을 바탕으로 다시 파일 insert) -->
	<update id="communityUpdate" parameterType="com.ssafy.happyhouse.dto.CommunityDto">
		UPDATE community
		   SET TITLE = #{title},
		   CONTENT   = #{content}
		 WHERE BOARD_ID = #{boardId}
	</update>
	
	
	
	
	<!-- # 게시판 화면에서의 처리 -->
	<!-- 총 게시글 목록 -->
	<select id="communityList" parameterType="map" resultType="com.ssafy.happyhouse.dto.CommunityDto">
		SELECT b.BOARD_ID, b.USER_SEQ, u.USER_NAME, u.USER_PROFILE_IMAGE_URL,
		  	   b.TITLE, b.CONTENT, b.REG_DT, b.READ_COUNT
		  FROM community b, USERS u
		 WHERE b.USER_SEQ = u.USER_SEQ
		 ORDER BY b.board_ID DESC
		 LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<!-- 총 게시글 수 -->
	<select id="communityListTotalCount" resultType="int">
		SELECT COUNT(*) FROM community
	</select>

	<!-- 검색어 입력 시 게시글 목록 -->
	<select id="communityListKeyword" parameterType="map" resultType="com.ssafy.happyhouse.dto.CommunityDto">
		SELECT b.BOARD_ID, b.USER_SEQ, u.USER_NAME, u.USER_PROFILE_IMAGE_URL,
		  	   b.TITLE, b.CONTENT, b.REG_DT, b.READ_COUNT
		  FROM community b, USERS u
		  WHERE b.USER_SEQ = u.USER_SEQ 
		  
		  <trim prefix="AND ">
		  	<choose>
		  		<when test="type == 'title'">
		  			b.TITLE LIKE CONCAT('%', #{keyword} ,'%') 
		  		</when>
		  		<when test="type == 'content'">
		  			b.CONTENT LIKE CONCAT('%', #{keyword} ,'%') 
		  		</when>
		  		<when test="type == 'all'">
		  			( 
		  			  b.TITLE LIKE CONCAT('%', #{keyword} ,'%') 
		  			  OR b.CONTENT LIKE CONCAT('%', #{keyword} ,'%')
		  			 ) 
		  		</when>
		  	</choose>
		  </trim>
		  ORDER BY b.BOARD_ID DESC
		  LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<!-- 검색 결과 총 수 -->
	<select id="communityListKeywordTotalCount" parameterType="string" resultType="int">
		SELECT COUNT(*)
		  FROM community
		 WHERE TITLE LIKE CONCAT('%', #{keyword} ,'%')
	 </select>
	 
	 
	 
 	 <!-- # 댓글 처리 -->
 	 <!-- 댓글 등록 -->
	 <insert id="replyInsert" parameterType="com.ssafy.happyhouse.dto.ReplyDto" useGeneratedKeys="true" keyProperty="boardId">
	 	INSERT INTO reply ( board_id, text, user_seq, REG_DT)
		VALUES ( #{boardId}, #{text}, #{userSeq}, now() )
	 </insert>
	 
	 <!-- 댓글 조회 -->
	 <select id="replyDetail" parameterType="int" resultType="com.ssafy.happyhouse.dto.ReplyDto">
	 	SELECT r.REPLY_ID, r.BOARD_ID, r.USER_SEQ, u.USER_NAME, u.USER_PROFILE_IMAGE_URL,
			   r.TEXT, r.REG_DT
		  FROM reply r, USERS u
		 WHERE r.REPLY_ID = #{replyId}
		   AND r.USER_SEQ = u.USER_SEQ
	 </select>
	 
	 <!-- 댓글 수정 -->
	 <update id="replyUpdate" parameterType="com.ssafy.happyhouse.dto.ReplyDto">
		UPDATE reply
		   SET text = #{text}
		 WHERE reply_id = #{replyId}
	</update>
	 
	 <!-- 댓글 삭제 -->
	 <delete id="replyDelete" parameterType="int">
		DELETE FROM reply WHERE reply_id = #{replyId}
	</delete>
	
	<!-- 댓글 목록 삭제 -->
	<delete id="replyListDelete" parameterType="int">
		DELETE FROM reply WHERE board_id = #{boardId}
	</delete>
	
	<!-- 댓글 목록 -->
	<select id="replyList" parameterType="int" resultType="com.ssafy.happyhouse.dto.ReplyDto">
		SELECT reply_id, board_id, text, user_seq, reg_dt FROM reply WHERE board_id = #{boardId} ORDER BY reply_id ASC;
	</select>
</mapper>






